generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                   String             @id @default(uuid())
  name                 String
  email                String             @unique
  password_hash        String
  role                 UserRole           @default(END_USER)
  status               UserStatus         @default(ACTIVE)
  default_country_code String?
  created_at           DateTime           @default(now())
  updated_at           DateTime           @updatedAt
  contacts             Contact[]
  prepare_to_send_jobs PrepareToSendJob[]
  created_templates    Template[]

  @@map("users")
}

model Template {
  id                   String             @id @default(uuid())
  title                String
  content              String
  created_by           String
  is_active            Boolean            @default(true)
  created_at           DateTime           @default(now())
  updated_at           DateTime           @updatedAt
  prepare_to_send_jobs PrepareToSendJob[]
  creator              User               @relation(fields: [created_by], references: [id])

  @@unique([title, created_by])
  @@map("templates")
}

model Contact {
  id         String   @id @default(uuid())
  owner_id   String
  name       String?
  raw_phone  String
  e164_phone String?
  label      String?
  added_at   DateTime @default(now())
  updated_at DateTime @updatedAt
  owner      User     @relation(fields: [owner_id], references: [id])

  @@unique([owner_id, e164_phone])
  @@map("contacts")
}

model PrepareToSendJob {
  id               String    @id @default(uuid())
  user_id          String
  template_id      String?
  message_preview  String
  recipients_raw   String
  recipients_final String
  duplicates       String
  created_at       DateTime  @default(now())
  template         Template? @relation(fields: [template_id], references: [id])
  user             User      @relation(fields: [user_id], references: [id])

  @@map("prepare_to_send_jobs")
}

enum UserRole {
  ADMIN
  END_USER
}

enum UserStatus {
  ACTIVE
  SUSPENDED
}
