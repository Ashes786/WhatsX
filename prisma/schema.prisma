// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(uuid())
  name                String
  email               String   @unique
  password_hash       String
  role                UserRole @default(END_USER)
  status              UserStatus @default(ACTIVE)
  default_country_code String?  // e.g. "+92"
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  // Relations
  contacts            Contact[]
  created_templates   Template[]
  prepare_to_send_jobs PrepareToSendJob[]

  @@map("users")
}

model Template {
  id          String      @id @default(uuid())
  title       String
  content     String
  created_by  String      // FK to User.id
  is_active   Boolean     @default(true)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt

  // Relations
  creator     User        @relation(fields: [created_by], references: [id])
  prepare_to_send_jobs PrepareToSendJob[]

  @@unique([title, created_by])
  @@map("templates")
}

model Contact {
  id          String   @id @default(uuid())
  owner_id    String   // FK to User.id
  name        String?
  raw_phone   String
  e164_phone  String?  // normalized canonical number
  label       String?
  added_at    DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relations
  owner       User     @relation(fields: [owner_id], references: [id])

  @@unique([owner_id, e164_phone])
  @@map("contacts")
}

model PrepareToSendJob {
  id               String   @id @default(uuid())
  user_id          String   // FK to User.id
  template_id      String?  // FK to Template.id
  message_preview  String
  recipients_raw   String   // JSON array of raw phone strings
  recipients_final String   // JSON array of normalized E.164 phone strings
  duplicates       String   // JSON array of duplicate objects
  created_at       DateTime @default(now())

  // Relations
  user             User     @relation(fields: [user_id], references: [id])
  template         Template? @relation(fields: [template_id], references: [id])

  @@map("prepare_to_send_jobs")
}

enum UserRole {
  ADMIN
  END_USER
}

enum UserStatus {
  ACTIVE
  SUSPENDED
}